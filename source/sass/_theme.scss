

/**
 * Generic CSS styling
 *
 * This section is just for wrappers and additional
 * containers and such to fit the design and layout
 * guidlines for our project
 */


// .fonts-loaded body {
//   font-family: $base-font-family-webfont;
// }


// body {
//   background-color: red;
// }


// .page {
//   margin: 0 auto;
//   max-width: 64em;
//   //padding: $base-spacing-unit;
// }



/**
 * SVG icon sprite
 */

// .icon {
//   width: ($base-font-size / 16px) * 1em;
//   height: ($base-font-size / 16px) * 1em;
//   vertical-align: middle;
//   display: inline-block;
//
//   transition: all 0.25s;
//   fill: $black;
//
//   a:hover & {
//     fill: lighten($black, 40%);
//   }
// }
//
// .icon--large {
//   width: (($base-font-size * 2) / $base-font-size) * 1em;
//   height: (($base-font-size * 2) / $base-font-size) * 1em;
// }
//
// .icon--huge {
//   width: (($base-font-size * 4) / $base-font-size) * 1em;
//   height: (($base-font-size * 4) / $base-font-size) * 1em;
// }


a {
  transition: all 0.2s;
  text-decoration: underline;

  // &:hover, &:active, &:focus {
  //   color: red;
  // }
}



ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

/**
 * Enable automativ calculation of `srcset` and `sizes`
 */
img[data-sizes="auto"] {
  display: block;
  max-width: none;
  width: 100%;
  height: auto;
}


/**
 * Enable transitions for layzy loaded images
 *
 */
.lazyload,
.lazyloading {
    opacity: 0 !important;
}

.lazyloaded {
  opacity: 1;
  transition: opacity 0.25s ease-in !important;
}






/**
 * list of headings
 * @string {String}
 */
$headings: 'h1, h2, h3, h4, h5, h6';

@each $item in $headings {
  #{$item} {
    font-style: normal;
    font-weight: inherit;
    color: $heading-color;
    font-family: $museo-100;
    margin-top: 0;
    hyphens: auto;
    line-height: $line-height-base;
  }
}




.heading-section {
  font-size: $font-size-h1;
  display: inline-block;
  border: 6px solid $border-color-variant-1;
  text-transform: uppercase;
  padding: 6px 12px;
  margin: 0;
  line-height: 1;

  @media (max-width: $screen-md) {
    font-size: $font-size-h1 / 1.75;
  }
}

.heading-section--sub {
  font-size: $font-size-h2;
  display: inline-block;
  border-top: 3px solid $border-color;
  text-transform: uppercase;
  padding: 12px;
  margin-top: 0;
  margin-bottom: 48px;
  line-height: 1;

  @media (max-width: $screen-md) {
    font-size: $font-size-h2 / 1.5;
  }
}

.heading-section--sub--variant-1 {
  border-top-color: #fff;
  color: #fff;
}

.heading-section--sub--variant-2 {
  padding: 12px 0;
}

.heading-section--sub--variant-3 {
  font-size: ($font-size-h2 / 1.5);
}


.heading-intermediate {
  text-transform: uppercase;
  font-size: floor(($font-size-base * 2.25));
  line-height: 1;
}

.heading-section--header {
  display: block;
  width: 100%;
  font-size: $font-size-h2;
  color: $heading-color-invert;

  @media (max-width: $screen-md) {
    font-size: $font-size-h2 / 1.5;
  }
}


/**
 *
 */

.section-header {
  width: 100%;
  display: block;
  z-index: 10;
}



.section-frame {
  width: 100%;
  background-color: $section-frame-bg;
}

.section-frame--variant-1 {
  background-color: $section-frame-variant-1-bg;
}

.section-frame--variant-2 {
  background-color: $section-frame-variant-2-bg;
}

.section-frame--variant-3 {
  background-color: $section-frame-variant-3-bg;
}

.section-frame--variant-4 {
  background-color: $section-frame-variant-4-bg;
}



.section-header {
  border-bottom: 5px solid $border-color-variant-1;
  // Because carousel-indicators are set to 15
  z-index: 96;
}

.section-frame--navigation-lang {
  background-color: $section-frame-bg;
}

.section-frame--navigation-main {
  background-color: #fff;
}

.section-frame--footer {
  padding: 36px 0;
  color: #fff;

  @media (min-width: $screen-xs) {
    padding: 72px 0;
  }
}


.section-frame--header {
  position: relative;
}

.carousel-header {
  position: absolute !important;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 5;
}


.u-index-15 {
  position: relative;
  z-index: 99;
}


.section-frame--innovation {
  background-image: url(../img/lights.svg);
  background-size: contain;
  min-height: 20em;
}






/**
 * ...
 */

.header-entry {
  display: flex;
  flex-flow: column wrap;
  //justify-content: space-between;
  color: #fff;

  @media (min-width: $screen-sm) {
    flex-flow: row nowrap;
    margin-bottom: 12px;
  }
 }

 .header-entry__box {
   display: flex;
   flex-flow: row wrap;
   flex-basis: 100%;
   margin-bottom: 0.5em;

   @media (min-width: $screen-sm) {
     flex-basis: 50%;
     margin-bottom: 0;
   }
 }

 .header-entry__location {
   font-family: $museo-100;
   font-size: floor(($font-size-base * 1.6));
   line-height: 1.1;
   text-transform: uppercase;
   color: #fff;

   span {
     background-color: $header-location-bg-color;
     display: block;
     padding: 0.5em;
   }

   @media (min-width: $screen-sm) {
     margin-left: 1em;
   }
  }


  // .affix-top {
  //   //border: 5px solid red;
  //   //transform: translateY(-5px);
  //   //transition: all 2s;
  // }
  //
  .affix {
    //border: 5px solid red;
    transform: translateY(0%);
    transition: transform 1s;
  }

  .affix-top {
    //border: 5px solid red;
    //transform: translateY(-100%);
    //transition: transform 1s;


    @media (min-width: $screen-md) {
      .main-nav__list {
        display: none;
      }
    }
  }


/**
 * ...
 */

.header-nav {
  display: flex;
  flex-flow: column wrap;
  justify-content: space-between;

  @media (min-width: $screen-sm) {
    flex-flow: row nowrap;
    margin-bottom: 48px;
  }
 }

.header-nav__box {
  display: flex;
  flex-flow: row wrap;
  flex-basis: 100%;
  margin-bottom: 0.5em;

  @media (min-width: $screen-sm) {
    flex-basis: 24%;
    min-height: 10em;
    margin-bottom: 0;
  }

  background-color: #fff;
  padding: 12px;

  h2 {
    font-size: $font-size-h2 / 1.5;
    line-height: 1;
    text-transform: uppercase;
  }

  .cta-link {
    align-self: flex-end;
  }
}



.info-scroll {
  display: flex;
  justify-content: center;
  align-items: center;
}





.carousel-fade .carousel-inner .item {
    transition: all 1.1s ease-in-out, opacity 1s ease-in;
}
 .carousel-fade .carousel-inner .item,
 .carousel-fade .carousel-inner .active.left,
 .carousel-fade .carousel-inner .active.right {
     opacity: 0 !important;
 }
 .carousel-fade .carousel-inner .active,
 .carousel-fade .carousel-inner .next.left,
 .carousel-fade .carousel-inner .prev.right {
     opacity: 1 !important;
 }
 .carousel-fade .carousel-control {
     z-index: 2 !important;
 }






/**
 * Actions Links ( mostly combined with icon)
 */

.cta-link {
  display: inline-block;
  border-top: 4px solid $border-color;
  background-color: #fff;
  margin-bottom: 0;

  input[type="button"],
  input[type="submit"],
  button {
    color: $form-submit-text-color;
    background-color: #fff;
    border: 0;

    &:hover {
      color: $cta-link-active-color;
      background-color: $cta-link-active-bg-color;
    }
  }
}

.cta-link__href {
  font-family: $museo-700;
  display: flex;
  align-items: center;
  padding: 16px;
  text-transform: uppercase;
  font-size: ($font-size-base - 1);
  text-decoration: none;
  transition: all 0.2s;

  &:active, &:focus {
    color: $cta-link-active-color;
    background-color: $cta-link-active-bg-color;
  }
}


// Modifier

.cta-link--forms {

  // input[type="button"],
  // input[type="submit"] {
  //   background-color: #fff;
  //   border: 0;
  // }

  .cta-link__href {
    //border: 0;
    //background-image: none;


    // &:active, &:focus {
    //   color: $main-nav-active-color;
    //   background-color: $main-nav-active-bg-color;
    // }
  }
}


.cta-link--transparent {
  border-top: 0;
  background-color: transparent;
}

.cta-link--full {
  width: 100%;
}

.cta-link--invert {
  border-top-color: #fff;
  background-color: transparent;

  .cta-link__href {
    color: #fff;

      &:hover, &:focus, &:active {
        text-decoration: underline;
      }
  }
}

.cta-link--lang {
  font-family: $museo-300;
  background-color: $nav-mobile-lang-bg-color;
  margin: 0 !important;

  > a, &.current {
    display: block;
    color: $nav-mobile-lang-color;
    text-decoration: none;
    padding: 12px 24px;
    text-transform: uppercase;
  }

  &.current {
    color: $nav-mobile-lang-current-color;
  }


}






/**
 * Main header navigation ( +  Logo)
 */

.main-nav {
  .container {
    @media (max-width: $screen-xs) {
      padding-left: 0;
      padding-right: 0;
    }
  }
}

.main-nav__elements {
  display: flex;
  flex-flow: column nowrap;

  @media (min-width: $screen-md) {
    flex-flow: row nowrap;
  }
}


.main-nav__targets {
  flex: 1 1 100%;

  @media (min-width: $screen-md) {
    flex-basis: 75%;
    align-self: center;
  }
}


.main-nav__list {
  display: flex;
  flex-flow: column wrap;

  list-style: none;
  padding: 0;
  margin: 0;

  @media (min-width: $screen-xs) {
    flex-flow: row wrap;
    justify-content: space-between;
  }

  @media (min-width: $screen-sm) {
    //justify-content: space-between;
  }

  > li {
    flex-basis: 100%;
    margin-left: 1em;
    margin-right: 1em;
    margin-bottom: 1em;

    .cta-link__href {
      padding: 12px 4px;
    }

    @media (min-width: $screen-xs) {
      flex-basis: 20%;
      margin: 0 0.5em 0.5em 0;

      &:nth-child(4) {
        margin-right: 0;
      }
    }

    @media (min-width: $screen-sm) {
      .cta-link__href {
        padding: 16px;
      }
    }

    @media (min-width: $screen-md) {
      //flex-basis: 20%;
      margin: 0 1em 0 0;

      &:last-of-type{
        margin-right: 0;
      }
    }
  }

}


.main-nav__logo {
  display: flex;
  justify-content: flex-end;
  align-self: flex-end;
  padding: 1em;

  @media (min-width: $screen-xs) {
    flex-basis: 20%;
    //padding: 1em;
  }

  @media (min-width: $screen-sm) {
    flex-basis: 20%;
    padding: 1em 1em 1.5em;
    align-self: center;
  }

  @media (min-width: $screen-md) {
    order: 1;
    padding-right: 0;
  }
}

.main-nav__logo-container {
  background: transparent url(../img/logo.svg) 0 0 no-repeat;
  background-size: contain;
  text-indent: -9999px;
  width: 120px;
  height: 63px;
  line-height: 1;
  margin-bottom: 0;

  @media (min-width: $screen-md) {
    width: 158px;
    height: 83px;
  }
}






/**
 * Adapt original glyphicon to play nicely
 * with flex box content
 */
.glyphicon {
  &::before {
    padding-right: 0.5em;
  }
}




/**
 * Add class to `.row`, if the grid has to
 * respect different content heights, e.g.
 * grid breakpoints
 */
.equalheight {
  display: flex;
  flex-wrap: wrap;
}




/**
 * ...
 */

.event-timetable {}

.event-timetable__panel {
  margin-bottom: 72px;
}

.event-timetable__title, .event-timetable__trigger {
  display: block;
  margin-top: 0;
  margin-bottom: 0;
  background-color: #fff;
  padding: 36px 16px;
  text-transform: uppercase;
  //font-size: ($font-size-base - 1);
  border-bottom: 6px solid $border-color-variant-1;
}

.event-timetable__trigger {
  text-align: center;
  background-color: transparent;
  padding: 24px 16px;
}

.event-timetable__item {
  border-bottom: 3px solid $border-color-variant-1;
  padding: 24px $panel-body-padding;
}

.event-timetable__time {
  font-family: $museo-100;
  font-size: ($font-size-base * 2.5);
  line-height: 1;
  display: block;
  margin-bottom: 24px;
  color: $heading-color;

  @media (max-width: $screen-md) {
    font-size: ($font-size-base * 2);
  }
}




/**
 * ...
 */

.product-innovation { }

.product-innovation__item {
  .carousel {
    margin-bottom: 72px;
  }
}

.product-innovation__box {
  background-color: #fff;
  padding: 24px;
  margin-bottom: 72px;
}





/**
 * ...
 */

.contact-form {
  border: 5px solid $form-border-color;
  padding: 24px;
}

.contact-form__note {
  font-size: $font-size-small;
}







/**
 * ...
 */

.building-information,
.innovate { }

.building-information__item, .innovate__item {
  margin-bottom: 48px;
}





/**
 * ...
 */

.references { }

.references__title {

}





/**
 * ...
 */

.image-box {
  margin-bottom: 16px;
}

.image-box__img {
  margin-bottom: 0;
}

.image-box__caption {
  display: block;
  font-size: $font-size-small;
  padding: 12px 0;
}






/**
 *
 */

.list-horizontal {
  display: inline-flex;
  flex-wrap: wrap;

  list-style: none;
  margin: 0;
  padding: 0;

  > li {
    flex: 0 0 auto;
    align-self: baseline;
  }
}

// Modifier
.list-horizontal--nav-language {
  a, .current {
    font-size: ($font-size-base - 3);
    color: $link-color-invert;
    text-transform: uppercase;
    transition: color 0.25s;
    text-decoration: none;
    padding: 0.5em 0;

    &:hover, &:focus, &:active {
      text-decoration: none;
      color: $link-hover-color-invert;
    }
  }

  .current {
    color: $link-hover-color-invert;
  }

  > li {
    margin-right: 1em;

    &::after {
      content: '|';
      margin-left: 1em;
      color: $separator-color;
    }

    &:last-of-type {
      margin-right: 0;
    }

    &:last-of-type::after {
      content: '';
      margin-left: 0;
    }
  }
}


.list-horizontal--footer {

  @media (max-width: $screen-xs) {
    flex-direction: column;
  }

  a, .current {
    color: $link-color-invert;
    transition: color 0.25s;
    text-decoration: none;
    padding: 0.5em 0;

    &:hover, &:focus, &:active {
      text-decoration: none;
      color: $link-hover-color-invert;
    }
  }

  .current {
    color: $link-hover-color-invert;
  }

  > li {
    padding: 0.5em 0;

    @media (min-width: $screen-xs) {
      margin-right: 2em;
    }

    &:last-of-type {
      margin-right: 0;
    }
  }
}





// Utility helper classes
.u-text-right {
  text-align: right !important;
}

.u-text-center {
  text-align: center !important;
}


.u-padding-y-axis {
  padding-top: 2em;
  padding-bottom: 2em;
}

.u-padding-y-axis-large {
  padding-top: 3.5em;
  padding-bottom: 3.5em;
}

.u-padding-x-axis {
  padding-left: 2em;
  padding-right: 2em;
}


.u-padding-bottom-large {
  padding-bottom: 7em;
}


.u-margin-bottom {
  margin-bottom: 12px;
}

.u-margin-bottom-double {
  margin-bottom: 24px;
}

.u-margin-bottom-quadruple {
  margin-bottom: 72px;
}

.u-margin-bottom-flush {
  margin-bottom: 0;
}



.u-width-60percent {
  max-width: 60%;
}

.u-color-invert {
  color: #fff;
}

.u-text-highlight {
  font-family: $museo-700;
  color: $util-text-highlight;
}

.u-text-uppercase {
  text-transform: uppercase;
}



.u-size-intermediate {
  font-size: floor(($font-size-base * 2.55));
}


// status (media queries related)
.is-hidden-xs {
  @media (max-width: $screen-xs) {
    display: none !important;
  }
}

.is-hidden-greater-xs {
  @media (min-width: $screen-xs) {
    display: none !important;
  }
}

.is-hidden-sm {
  @media (max-width: $screen-sm) {
    display: none !important;
  }
}

.is-hidden-md {
  @media (max-width: $screen-md) {
    display: none !important;
  }
}









/**
 * Bootstrap CSS related styling
 *
 * Within this section we customize only bootstrap
 * elements to fit the design and layout guidlines
 * for our project
 */






 //
 // Forms
 // --------------------------------------------------


 // Normalize non-controls
 //
 // Restyle and baseline non-control form elements.

 fieldset {
   padding: 0;
   margin: 0;
   border: 0;
   // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
   // so we reset that to ensure it behaves more like a standard block element.
   // See https://github.com/twbs/bootstrap/issues/12359.
   min-width: 0;
 }

 legend {
   display: block;
   width: 100%;
   padding: 0;
   margin-bottom: $line-height-computed;
   font-family: $museo-700;
   font-size: $font-size-base;
   line-height: inherit;
   color: $legend-color;
   border: 0;
   //border-bottom: 1px solid $legend-border-color;
 }

 label {
   display: inline-block;
   max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
   margin-bottom: 5px;
   font-weight: bold;
 }


 // Normalize form controls
 //
 // While most of our form styles require extra classes, some basic normalization
 // is required to ensure optimum display with or without those classes to better
 // address browser inconsistencies.

 // Override content-box in Normalize (* isn't specific enough)
 input[type="search"] {
   @include box-sizing(border-box);
 }

 // Position radios and checkboxes better
 input[type="radio"],
 input[type="checkbox"] {
   margin: 4px 0 0;
   margin-top: 1px \9; // IE8-9
   line-height: normal;
 }

 input[type="file"] {
   display: block;
 }

 // Make range inputs behave like textual form controls
 input[type="range"] {
   display: block;
   width: 100%;
 }

 // Make multiple select elements height not fixed
 select[multiple],
 select[size] {
   height: auto;
 }

 // Focus for file, radio, and checkbox
 input[type="file"]:focus,
 input[type="radio"]:focus,
 input[type="checkbox"]:focus {
   @include tab-focus;
 }

 // Adjust output element
 output {
   display: block;
   padding-top: ($padding-base-vertical + 1);
   font-size: $font-size-base;
   line-height: $line-height-base;
   color: $input-color;
 }


 // Common form controls
 //
 // Shared size and type resets for form controls. Apply `.form-control` to any
 // of the following form controls:
 //
 // select
 // textarea
 // input[type="text"]
 // input[type="password"]
 // input[type="datetime"]
 // input[type="datetime-local"]
 // input[type="date"]
 // input[type="month"]
 // input[type="time"]
 // input[type="week"]
 // input[type="number"]
 // input[type="email"]
 // input[type="url"]
 // input[type="search"]
 // input[type="tel"]
 // input[type="color"]

 .form-control {
   display: block;
   width: 100%;

   height: auto;
   padding: $padding-large-vertical $padding-large-horizontal;
   border: 0;

   font-size: $font-size-base;
   line-height: $line-height-base;
   color: $input-color;
   background-color: $input-bg;
   background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214


   border-radius: $input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
   @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
   @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

   // Customize the `:focus` state to imitate native WebKit styles.
   @include form-control-focus;

   // Placeholder
   @include placeholder;

   // Unstyle the caret on `<select>`s in IE10+.
   &::-ms-expand {
     border: 0;
     background-color: transparent;
   }

   // Disabled and read-only inputs
   //
   // HTML5 says that controls under a fieldset > legend:first-child won't be
   // disabled if the fieldset is disabled. Due to implementation difficulty, we
   // don't honor that edge case; we style them as disabled anyway.
   &[disabled],
   &[readonly],
   fieldset[disabled] & {
     background-color: $input-bg-disabled;
     opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
   }

   &[disabled],
   fieldset[disabled] & {
     cursor: $cursor-disabled;
   }

   // [converter] extracted textarea& to textarea.form-control
 }

 // Reset height for `textarea`s
 textarea.form-control {
   height: auto;
 }


 // Search inputs in iOS
 //
 // This overrides the extra rounded corners on search inputs in iOS so that our
 // `.form-control` class can properly style them. Note that this cannot simply
 // be added to `.form-control` as it's not specific enough. For details, see
 // https://github.com/twbs/bootstrap/issues/11586.

 input[type="search"] {
   -webkit-appearance: none;
 }


 // Special styles for iOS temporal inputs
 //
 // In Mobile Safari, setting `display: block` on temporal inputs causes the
 // text within the input to become vertically misaligned. As a workaround, we
 // set a pixel line-height that matches the given height of the input, but only
 // for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
 //
 // Note that as of 9.3, iOS doesn't support `week`.

 @media screen and (-webkit-min-device-pixel-ratio: 0) {
   input[type="date"],
   input[type="time"],
   input[type="datetime-local"],
   input[type="month"] {
     &.form-control {
       line-height: $input-height-base;
     }

     &.input-sm,
     .input-group-sm & {
       line-height: $input-height-small;
     }

     &.input-lg,
     .input-group-lg & {
       line-height: $input-height-large;
     }
   }
 }


 // Form groups
 //
 // Designed to help with the organization and spacing of vertical forms. For
 // horizontal forms, use the predefined grid classes.

 .form-group {
   margin-bottom: $form-group-margin-bottom;
 }


 // Checkboxes and radios
 //
 // Indent the labels to position radios/checkboxes as hanging controls.

 .radio,
 .checkbox {
   position: relative;
   display: block;
   margin-top: 10px;
   margin-bottom: 10px;

   label {
     min-height: $line-height-computed; // Ensure the input doesn't jump when there is no text
     padding-left: 20px;
     margin-bottom: 0;
     font-weight: normal;
     cursor: pointer;
   }
 }
 .radio input[type="radio"],
 .radio-inline input[type="radio"],
 .checkbox input[type="checkbox"],
 .checkbox-inline input[type="checkbox"] {
   position: absolute;
   margin-left: -20px;
   margin-top: 4px \9;
 }

 .radio + .radio,
 .checkbox + .checkbox {
   margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
 }

 // Radios and checkboxes on same line
 .radio-inline,
 .checkbox-inline {
   position: relative;
   display: inline-block;
   padding-left: 20px;
   margin-bottom: 0;
   vertical-align: middle;
   font-weight: normal;
   cursor: pointer;
 }
 .radio-inline + .radio-inline,
 .checkbox-inline + .checkbox-inline {
   margin-top: 0;
   margin-left: 10px; // space out consecutive inline controls
 }

 // Apply same disabled cursor tweak as for inputs
 // Some special care is needed because <label>s don't inherit their parent's `cursor`.
 //
 // Note: Neither radios nor checkboxes can be readonly.
 input[type="radio"],
 input[type="checkbox"] {
   &[disabled],
   &.disabled,
   fieldset[disabled] & {
     cursor: $cursor-disabled;
   }
 }
 // These classes are used directly on <label>s
 .radio-inline,
 .checkbox-inline {
   &.disabled,
   fieldset[disabled] & {
     cursor: $cursor-disabled;
   }
 }
 // These classes are used on elements with <label> descendants
 .radio,
 .checkbox {
   &.disabled,
   fieldset[disabled] & {
     label {
       cursor: $cursor-disabled;
     }
   }
 }


 // Static form control text
 //
 // Apply class to a `p` element to make any string of text align with labels in
 // a horizontal form layout.

 .form-control-static {
   // Size it appropriately next to real form controls
   padding-top: ($padding-base-vertical + 1);
   padding-bottom: ($padding-base-vertical + 1);
   // Remove default margin from `p`
   margin-bottom: 0;
   min-height: ($line-height-computed + $font-size-base);

   &.input-lg,
   &.input-sm {
     padding-left: 0;
     padding-right: 0;
   }
 }


 // Form control sizing
 //
 // Build on `.form-control` with modifier classes to decrease or increase the
 // height and font-size of form controls.
 //
 // The `.form-group-* form-control` variations are sadly duplicated to avoid the
 // issue documented in https://github.com/twbs/bootstrap/issues/15074.

 @include input-size('.input-sm', $input-height-small, $padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $input-border-radius-small);
 .form-group-sm {
   .form-control {
     height: $input-height-small;
     padding: $padding-small-vertical $padding-small-horizontal;
     font-size: $font-size-small;
     line-height: $line-height-small;
     border-radius: $input-border-radius-small;
   }
   select.form-control {
     height: $input-height-small;
     line-height: $input-height-small;
   }
   textarea.form-control,
   select[multiple].form-control {
     height: auto;
   }
   .form-control-static {
     height: $input-height-small;
     min-height: ($line-height-computed + $font-size-small);
     padding: ($padding-small-vertical + 1) $padding-small-horizontal;
     font-size: $font-size-small;
     line-height: $line-height-small;
   }
 }

 @include input-size('.input-lg', $input-height-large, $padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $input-border-radius-large);
 .form-group-lg {
   .form-control {
     height: $input-height-large;
     padding: $padding-large-vertical $padding-large-horizontal;
     font-size: $font-size-large;
     line-height: $line-height-large;
     border-radius: $input-border-radius-large;
   }
   select.form-control {
     height: $input-height-large;
     line-height: $input-height-large;
   }
   textarea.form-control,
   select[multiple].form-control {
     height: auto;
   }
   .form-control-static {
     height: $input-height-large;
     min-height: ($line-height-computed + $font-size-large);
     padding: ($padding-large-vertical + 1) $padding-large-horizontal;
     font-size: $font-size-large;
     line-height: $line-height-large;
   }
 }


 // Form control feedback states
 //
 // Apply contextual and semantic states to individual form controls.

 .has-feedback {
   // Enable absolute positioning
   position: relative;

   // Ensure icons don't overlap text
   .form-control {
     padding-right: ($input-height-base * 1.25);
   }
 }
 // Feedback icon (requires .glyphicon classes)
 .form-control-feedback {
   position: absolute;
   top: 0;
   right: 0;
   z-index: 2; // Ensure icon is above input groups
   display: block;
   width: $input-height-base;
   height: $input-height-base;
   line-height: $input-height-base;
   text-align: center;
   pointer-events: none;
 }
 .input-lg + .form-control-feedback,
 .input-group-lg + .form-control-feedback,
 .form-group-lg .form-control + .form-control-feedback {
   width: $input-height-large;
   height: $input-height-large;
   line-height: $input-height-large;
 }
 .input-sm + .form-control-feedback,
 .input-group-sm + .form-control-feedback,
 .form-group-sm .form-control + .form-control-feedback {
   width: $input-height-small;
   height: $input-height-small;
   line-height: $input-height-small;
 }

 // Feedback states
 .has-success {
   @include form-control-validation($state-success-text, $state-success-text, $state-success-bg);
 }
 .has-warning {
   @include form-control-validation($state-warning-text, $state-warning-text, $state-warning-bg);
 }
 .has-error {
   @include form-control-validation($state-danger-text, $state-danger-text, $state-danger-bg);
 }

 // Reposition feedback icon if input has visible label above
 .has-feedback label {

   & ~ .form-control-feedback {
     top: ($line-height-computed + 5); // Height of the `label` and its margin
   }
   &.sr-only ~ .form-control-feedback {
     top: 0;
   }
 }


 // Help text
 //
 // Apply to any element you wish to create light text for placement immediately
 // below a form control. Use for general help, formatting, or instructional text.

 .help-block {
   display: block; // account for any element using help-block
   margin-top: 5px;
   margin-bottom: 10px;
   color: lighten($text-color, 25%); // lighten the text some for contrast
 }


 // Inline forms
 //
 // Make forms appear inline(-block) by adding the `.form-inline` class. Inline
 // forms begin stacked on extra small (mobile) devices and then go inline when
 // viewports reach <768px.
 //
 // Requires wrapping inputs and labels with `.form-group` for proper display of
 // default HTML form controls and our custom form controls (e.g., input groups).
 //
 // Heads up! This is mixin-ed into `.navbar-form` in navbars.less.

 // [converter] extracted from `.form-inline` for libsass compatibility
 @mixin form-inline {

   // Kick in the inline
   @media (min-width: $screen-sm-min) {
     // Inline-block all the things for "inline"
     .form-group {
       display: inline-block;
       margin-bottom: 0;
       vertical-align: middle;
     }

     // In navbar-form, allow folks to *not* use `.form-group`
     .form-control {
       display: inline-block;
       width: auto; // Prevent labels from stacking above inputs in `.form-group`
       vertical-align: middle;
     }

     // Make static controls behave like regular ones
     .form-control-static {
       display: inline-block;
     }

     .input-group {
       display: inline-table;
       vertical-align: middle;

       .input-group-addon,
       .input-group-btn,
       .form-control {
         width: auto;
       }
     }

     // Input groups need that 100% width though
     .input-group > .form-control {
       width: 100%;
     }

     .control-label {
       margin-bottom: 0;
       vertical-align: middle;
     }

     // Remove default margin on radios/checkboxes that were used for stacking, and
     // then undo the floating of radios and checkboxes to match.
     .radio,
     .checkbox {
       display: inline-block;
       margin-top: 0;
       margin-bottom: 0;
       vertical-align: middle;

       label {
         padding-left: 0;
       }
     }
     .radio input[type="radio"],
     .checkbox input[type="checkbox"] {
       position: relative;
       margin-left: 0;
     }

     // Re-override the feedback icon.
     .has-feedback .form-control-feedback {
       top: 0;
     }
   }
 }
 // [converter] extracted as `@mixin form-inline` for libsass compatibility
 .form-inline {
   @include form-inline;
 }



 // Horizontal forms
 //
 // Horizontal forms are built on grid classes and allow you to create forms with
 // labels on the left and inputs on the right.

 .form-horizontal {

   // Consistent vertical alignment of radios and checkboxes
   //
   // Labels also get some reset styles, but that is scoped to a media query below.
   .radio,
   .checkbox,
   .radio-inline,
   .checkbox-inline {
     margin-top: 0;
     margin-bottom: 0;
     padding-top: ($padding-base-vertical + 1); // Default padding plus a border
   }
   // Account for padding we're adding to ensure the alignment and of help text
   // and other content below items
   .radio,
   .checkbox {
     min-height: ($line-height-computed + ($padding-base-vertical + 1));
   }

   // Make form groups behave like rows
   .form-group {
     @include make-row;
   }

   // Reset spacing and right align labels, but scope to media queries so that
   // labels on narrow viewports stack the same as a default form example.
   @media (min-width: $screen-sm-min) {
     .control-label {
       text-align: right;
       margin-bottom: 0;
       padding-top: ($padding-base-vertical + 1); // Default padding plus a border
     }
   }

   // Validation states
   //
   // Reposition the icon because it's now within a grid column and columns have
   // `position: relative;` on them. Also accounts for the grid gutter padding.
   .has-feedback .form-control-feedback {
     right: floor(($grid-gutter-width / 2));
   }

   // Form group sizes
   //
   // Quick utility class for applying `.input-lg` and `.input-sm` styles to the
   // inputs and labels within a `.form-group`.
   .form-group-lg {
     @media (min-width: $screen-sm-min) {
       .control-label {
         padding-top: ($padding-large-vertical + 1);
         font-size: $font-size-large;
       }
     }
   }
   .form-group-sm {
     @media (min-width: $screen-sm-min) {
       .control-label {
         padding-top: ($padding-small-vertical + 1);
         font-size: $font-size-small;
       }
     }
   }
 }







 //
 // Thumbnails
 // --------------------------------------------------


 // Mixin and adjust the regular image class
 .thumbnail {
   display: block;
   padding: $thumbnail-padding;
   margin-bottom: $line-height-computed;
   line-height: $line-height-base;
   background-color: $thumbnail-bg;
   border: 3px solid $c_blackiris_20;
   border-radius: $thumbnail-border-radius;
   @include transition(border .2s ease-in-out);

   > img,
   a > img {
     @include img-responsive;
     margin-left: auto;
     margin-right: auto;
   }

   // [converter] extracted a&:hover, a&:focus, a&.active to a.thumbnail:hover, a.thumbnail:focus, a.thumbnail.active

   // Image captions
   .caption {
     padding: $thumbnail-caption-padding;
     padding-top: 16px;

   }
 }

 // Add a hover state for linked versions only
 a.thumbnail:hover,
 a.thumbnail:focus,
 a.thumbnail.active {
   border-color: $link-color;
 }







 //
 // Close icons
 // --------------------------------------------------


 .close {
   text-shadow: 0;
   opacity: 1;

   &:hover,
   &:focus {
     opacity: 1;
   }

   // [converter] extracted button& to button.close
 }





 //
 // Modals
 // --------------------------------------------------

 // .modal-open      - body class for killing the scroll
 // .modal           - container to scroll within
 // .modal-dialog    - positioning shell for the actual modal
 // .modal-content   - actual modal w/ bg and corners and shit

 // Kill the scroll on the body
 .modal-open {
   overflow: hidden;
 }

 // Container that the modal scrolls within
 .modal {
   display: none;
   overflow: hidden;
   position: fixed;
   top: 0;
   right: 0;
   bottom: 0;
   left: 0;
   z-index: $zindex-modal;
   -webkit-overflow-scrolling: touch;

   // Prevent Chrome on Windows from adding a focus outline. For details, see
   // https://github.com/twbs/bootstrap/pull/10951.
   outline: 0;

   // When fading in the modal, animate it to slide down
   &.fade .modal-dialog {
     @include translate(0, -25%);
     @include transition-transform(0.3s ease-out);
   }
   &.in .modal-dialog { @include translate(0, 0) }
 }
 .modal-open .modal {
   overflow-x: hidden;
   overflow-y: auto;
 }

 // Shell div to position the modal with bottom padding
 .modal-dialog {
   position: relative;
   width: auto;
   margin: 10px;
 }

 // Actual modal
 .modal-content {
   position: relative;
   background-color: $modal-content-bg;
   border: 1px solid $modal-content-fallback-border-color; //old browsers fallback (ie8 etc)
   border: 1px solid $modal-content-border-color;
   border-radius: $border-radius-large;
   @include box-shadow(0 3px 9px rgba(0,0,0,.5));
   background-clip: padding-box;
   // Remove focus outline from opened modal
   outline: 0;
 }

 // Modal background
 .modal-backdrop {
   position: fixed;
   top: 0;
   right: 0;
   bottom: 0;
   left: 0;
   z-index: $zindex-modal-background;
   background-color: $modal-backdrop-bg;
   // Fade for backdrop
   &.fade { @include opacity(0); }
   &.in { @include opacity($modal-backdrop-opacity); }
 }

 // Modal header
 // Top section of the modal w/ title and dismiss
 .modal-header {
  //  position: relative;
   padding: 0;
   border-bottom: 0;
   @include clearfix;
 }
 // Close icon
 .modal-header .close {
  //  position: absolute;
  //  top: 0;
  //  right: 0;
   margin-top: -24px;
   background-color: #fff;
   padding: 12px;

   // Added
   .glyphicon::before {
     padding-right: 0;
   }
 }

 // Title text within header
 .modal-title {
   margin: 0;
   line-height: $modal-title-line-height;
 }

 // Modal body
 // Where all modal content resides (sibling of .modal-header and .modal-footer)
 .modal-body {
   position: relative;
   padding: $modal-inner-padding;
 }

 // Footer (for actions)
 .modal-footer {
   padding: $modal-inner-padding;
   text-align: right; // right align buttons
   border-top: 1px solid $modal-footer-border-color;
   @include clearfix; // clear it in case folks use .pull-* classes on buttons

   // Properly space out buttons
   .btn + .btn {
     margin-left: 5px;
     margin-bottom: 0; // account for input[type="submit"] which gets the bottom margin like all other inputs
   }
   // but override that for button groups
   .btn-group .btn + .btn {
     margin-left: -1px;
   }
   // and override it for block buttons as well
   .btn-block + .btn-block {
     margin-left: 0;
   }
 }

 // Measure scrollbar width for padding body during modal show/hide
 .modal-scrollbar-measure {
   position: absolute;
   top: -9999px;
   width: 50px;
   height: 50px;
   overflow: scroll;
 }

 // Scale up the modal
 @media (min-width: $screen-sm-min) {
   // Automatically set modal's width for larger viewports
   .modal-dialog {
     width: $modal-md;
     margin: 30px auto;
   }
   .modal-content {
     @include box-shadow(0 5px 15px rgba(0,0,0,.5));
   }

   // Modal sizes
   .modal-sm { width: $modal-sm; }
 }

 @media (min-width: $screen-md-min) {
   .modal-lg { width: $modal-lg; }
 }






 //
 // Panels
 // --------------------------------------------------

 // Base class
 .panel {
   margin-bottom: $line-height-computed;
   background-color: $panel-bg;
   border: 0;
   border-radius: 0;
 }

 // Panel contents
 .panel-body {
   padding: 0;
   @include clearfix;
 }

 // Optional heading
 .panel-heading {
   padding: 0;
   border-bottom: 0;

   > .dropdown .dropdown-toggle {
     color: inherit;
   }
 }




 // List groups in panels
 //
 // By default, space out list group content from panel headings to account for
 // any kind of custom content between the two.

 // .panel {
 //   > .list-group,
 //   > .panel-collapse > .list-group {
 //     margin-bottom: 0;
 //
 //     .list-group-item {
 //       border-width: 1px 0;
 //       border-radius: 0;
 //     }
 //
 //     // Add border top radius for first one
 //     &:first-child {
 //       .list-group-item:first-child {
 //         border-top: 0;
 //         @include border-top-radius(($panel-border-radius - 1));
 //       }
 //     }
 //
 //     // Add border bottom radius for last one
 //     &:last-child {
 //       .list-group-item:last-child {
 //         border-bottom: 0;
 //         @include border-bottom-radius(($panel-border-radius - 1));
 //       }
 //     }
 //   }
 //   > .panel-heading + .panel-collapse > .list-group {
 //     .list-group-item:first-child {
 //       @include border-top-radius(0);
 //     }
 //   }
 // }
 // // Collapse space between when there's no additional content.
 // .panel-heading + .list-group {
 //   .list-group-item:first-child {
 //     border-top-width: 0;
 //   }
 // }
 // .list-group + .panel-footer {
 //   border-top-width: 0;
 // }

 // Tables in panels
 //
 // Place a non-bordered `.table` within a panel (not within a `.panel-body`) and
 // watch it go full width.

 // .panel {
 //   > .table,
 //   > .table-responsive > .table,
 //   > .panel-collapse > .table {
 //     margin-bottom: 0;
 //
 //     caption {
 //       padding-left: $panel-body-padding;
 //       padding-right: $panel-body-padding;
 //     }
 //   }
 //   // Add border top radius for first one
 //   > .table:first-child,
 //   > .table-responsive:first-child > .table:first-child {
 //     @include border-top-radius(($panel-border-radius - 1));
 //
 //     > thead:first-child,
 //     > tbody:first-child {
 //       > tr:first-child {
 //         border-top-left-radius: ($panel-border-radius - 1);
 //         border-top-right-radius: ($panel-border-radius - 1);
 //
 //         td:first-child,
 //         th:first-child {
 //           border-top-left-radius: ($panel-border-radius - 1);
 //         }
 //         td:last-child,
 //         th:last-child {
 //           border-top-right-radius: ($panel-border-radius - 1);
 //         }
 //       }
 //     }
 //   }
 //   // Add border bottom radius for last one
 //   > .table:last-child,
 //   > .table-responsive:last-child > .table:last-child {
 //     @include border-bottom-radius(($panel-border-radius - 1));
 //
 //     > tbody:last-child,
 //     > tfoot:last-child {
 //       > tr:last-child {
 //         border-bottom-left-radius: ($panel-border-radius - 1);
 //         border-bottom-right-radius: ($panel-border-radius - 1);
 //
 //         td:first-child,
 //         th:first-child {
 //           border-bottom-left-radius: ($panel-border-radius - 1);
 //         }
 //         td:last-child,
 //         th:last-child {
 //           border-bottom-right-radius: ($panel-border-radius - 1);
 //         }
 //       }
 //     }
 //   }
 //   > .panel-body + .table,
 //   > .panel-body + .table-responsive,
 //   > .table + .panel-body,
 //   > .table-responsive + .panel-body {
 //     border-top: 1px solid $table-border-color;
 //   }
 //   > .table > tbody:first-child > tr:first-child th,
 //   > .table > tbody:first-child > tr:first-child td {
 //     border-top: 0;
 //   }
 //   > .table-bordered,
 //   > .table-responsive > .table-bordered {
 //     border: 0;
 //     > thead,
 //     > tbody,
 //     > tfoot {
 //       > tr {
 //         > th:first-child,
 //         > td:first-child {
 //           border-left: 0;
 //         }
 //         > th:last-child,
 //         > td:last-child {
 //           border-right: 0;
 //         }
 //       }
 //     }
 //     > thead,
 //     > tbody {
 //       > tr:first-child {
 //         > td,
 //         > th {
 //           border-bottom: 0;
 //         }
 //       }
 //     }
 //     > tbody,
 //     > tfoot {
 //       > tr:last-child {
 //         > td,
 //         > th {
 //           border-bottom: 0;
 //         }
 //       }
 //     }
 //   }
 //   > .table-responsive {
 //     border: 0;
 //     margin-bottom: 0;
 //   }
 // }


 // Collapsible panels (aka, accordion)
 //
 // Wrap a series of panels in `.panel-group` to turn them into an accordion with
 // the help of our collapse JavaScript plugin.

 .panel-group {
   margin-bottom: $line-height-computed;

   // Tighten up margin so it's only between panels
   .panel {
     margin-bottom: 72px;
     border-radius: $panel-border-radius;

     + .panel {
       margin-top: 5px;
     }
   }

  //  .panel-heading {
  //    border-bottom: 0;
   //
  //    + .panel-collapse > .panel-body,
  //    + .panel-collapse > .list-group {
  //      border-top: 1px solid $panel-inner-border;
  //    }
  //  }
   //
  //  .panel-footer {
  //    border-top: 0;
  //    + .panel-collapse .panel-body {
  //      border-bottom: 1px solid $panel-inner-border;
  //    }
  //  }
 }


 // // Contextual variations
 // .panel-default {
 //   @include panel-variant($panel-default-border, $panel-default-text, $panel-default-heading-bg, $panel-default-border);
 // }
 // .panel-primary {
 //   @include panel-variant($panel-primary-border, $panel-primary-text, $panel-primary-heading-bg, $panel-primary-border);
 // }
 // .panel-success {
 //   @include panel-variant($panel-success-border, $panel-success-text, $panel-success-heading-bg, $panel-success-border);
 // }
 // .panel-info {
 //   @include panel-variant($panel-info-border, $panel-info-text, $panel-info-heading-bg, $panel-info-border);
 // }
 // .panel-warning {
 //   @include panel-variant($panel-warning-border, $panel-warning-text, $panel-warning-heading-bg, $panel-warning-border);
 // }
 // .panel-danger {
 //   @include panel-variant($panel-danger-border, $panel-danger-text, $panel-danger-heading-bg, $panel-danger-border);
 // }

// //
// // Buttons
// // --------------------------------------------------
//
// // Common styles
// .btn-default,
// .btn-primary,
// .btn-success,
// .btn-info,
// .btn-warning,
// .btn-danger {
//   text-shadow: 0 -1px 0 rgba(0,0,0,.2);
//   $shadow: inset 0 1px 0 rgba(255,255,255,.15), 0 1px 1px rgba(0,0,0,.075);
//   @include box-shadow($shadow);
//
//   // Reset the shadow
//   &:active,
//   &.active {
//     @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
//   }
//
//   &.disabled,
//   &[disabled],
//   fieldset[disabled] & {
//     @include box-shadow(none);
//   }
//
//   .badge {
//     text-shadow: none;
//   }
// }
//
// // Mixin for generating new styles
// @mixin btn-styles($btn-color: #555) {
//   @include gradient-vertical($start-color: $btn-color, $end-color: darken($btn-color, 12%));
//   @include reset-filter; // Disable gradients for IE9 because filter bleeds through rounded corners; see https://github.com/twbs/bootstrap/issues/10620
//   background-repeat: repeat-x;
//   border-color: darken($btn-color, 14%);
//
//   &:hover,
//   &:focus  {
//     background-color: darken($btn-color, 12%);
//     background-position: 0 -15px;
//   }
//
//   &:active,
//   &.active {
//     background-color: darken($btn-color, 12%);
//     border-color: darken($btn-color, 14%);
//   }
//
//   &.disabled,
//   &[disabled],
//   fieldset[disabled] & {
//     &,
//     &:hover,
//     &:focus,
//     &.focus,
//     &:active,
//     &.active {
//       background-color: darken($btn-color, 12%);
//       background-image: none;
//     }
//   }
// }
//
// // Common styles
// .btn {
//   // Remove the gradient for the pressed/active state
//   &:active,
//   &.active {
//     background-image: none;
//   }
// }
//
// // Apply the mixin to the buttons
// .btn-default { @include btn-styles($btn-default-bg); text-shadow: 0 1px 0 #fff; border-color: #ccc; }
// .btn-primary { @include btn-styles($btn-primary-bg); }
// .btn-success { @include btn-styles($btn-success-bg); }
// .btn-info    { @include btn-styles($btn-info-bg); }
// .btn-warning { @include btn-styles($btn-warning-bg); }
// .btn-danger  { @include btn-styles($btn-danger-bg); }
//
//
// //
// // Images
// // --------------------------------------------------
//
// .thumbnail,
// .img-thumbnail {
//   @include box-shadow(0 1px 2px rgba(0,0,0,.075));
// }
//
//
// //
// // Dropdowns
// // --------------------------------------------------
//
// .dropdown-menu > li > a:hover,
// .dropdown-menu > li > a:focus {
//   @include gradient-vertical($start-color: $dropdown-link-hover-bg, $end-color: darken($dropdown-link-hover-bg, 5%));
//   background-color: darken($dropdown-link-hover-bg, 5%);
// }
// .dropdown-menu > .active > a,
// .dropdown-menu > .active > a:hover,
// .dropdown-menu > .active > a:focus {
//   @include gradient-vertical($start-color: $dropdown-link-active-bg, $end-color: darken($dropdown-link-active-bg, 5%));
//   background-color: darken($dropdown-link-active-bg, 5%);
// }
//
//
// //
// // Navbar
// // --------------------------------------------------
//
// // Default navbar
// .navbar-default {
//   @include gradient-vertical($start-color: lighten($navbar-default-bg, 10%), $end-color: $navbar-default-bg);
//   @include reset-filter; // Remove gradient in IE<10 to fix bug where dropdowns don't get triggered
//   border-radius: $navbar-border-radius;
//   $shadow: inset 0 1px 0 rgba(255,255,255,.15), 0 1px 5px rgba(0,0,0,.075);
//   @include box-shadow($shadow);
//
//   .navbar-nav > .open > a,
//   .navbar-nav > .active > a {
//     @include gradient-vertical($start-color: darken($navbar-default-link-active-bg, 5%), $end-color: darken($navbar-default-link-active-bg, 2%));
//     @include box-shadow(inset 0 3px 9px rgba(0,0,0,.075));
//   }
// }
// .navbar-brand,
// .navbar-nav > li > a {
//   text-shadow: 0 1px 0 rgba(255,255,255,.25);
// }
//
// // Inverted navbar
// .navbar-inverse {
//   @include gradient-vertical($start-color: lighten($navbar-inverse-bg, 10%), $end-color: $navbar-inverse-bg);
//   @include reset-filter; // Remove gradient in IE<10 to fix bug where dropdowns don't get triggered; see https://github.com/twbs/bootstrap/issues/10257
//   border-radius: $navbar-border-radius;
//   .navbar-nav > .open > a,
//   .navbar-nav > .active > a {
//     @include gradient-vertical($start-color: $navbar-inverse-link-active-bg, $end-color: lighten($navbar-inverse-link-active-bg, 2.5%));
//     @include box-shadow(inset 0 3px 9px rgba(0,0,0,.25));
//   }
//
//   .navbar-brand,
//   .navbar-nav > li > a {
//     text-shadow: 0 -1px 0 rgba(0,0,0,.25);
//   }
// }
//
// // Undo rounded corners in static and fixed navbars
// .navbar-static-top,
// .navbar-fixed-top,
// .navbar-fixed-bottom {
//   border-radius: 0;
// }
//
// // Fix active state of dropdown items in collapsed mode
// @media (max-width: $grid-float-breakpoint-max) {
//   .navbar .navbar-nav .open .dropdown-menu > .active > a {
//     &,
//     &:hover,
//     &:focus {
//       color: #fff;
//       @include gradient-vertical($start-color: $dropdown-link-active-bg, $end-color: darken($dropdown-link-active-bg, 5%));
//     }
//   }
// }
//
//
// //
// // Alerts
// // --------------------------------------------------
//
// // Common styles
// .alert {
//   text-shadow: 0 1px 0 rgba(255,255,255,.2);
//   $shadow: inset 0 1px 0 rgba(255,255,255,.25), 0 1px 2px rgba(0,0,0,.05);
//   @include box-shadow($shadow);
// }
//
// // Mixin for generating new styles
// @mixin alert-styles($color) {
//   @include gradient-vertical($start-color: $color, $end-color: darken($color, 7.5%));
//   border-color: darken($color, 15%);
// }
//
// // Apply the mixin to the alerts
// .alert-success    { @include alert-styles($alert-success-bg); }
// .alert-info       { @include alert-styles($alert-info-bg); }
// .alert-warning    { @include alert-styles($alert-warning-bg); }
// .alert-danger     { @include alert-styles($alert-danger-bg); }
//
//
// //
// // Progress bars
// // --------------------------------------------------
//
// // Give the progress background some depth
// .progress {
//   @include gradient-vertical($start-color: darken($progress-bg, 4%), $end-color: $progress-bg)
// }
//
// // Mixin for generating new styles
// @mixin progress-bar-styles($color) {
//   @include gradient-vertical($start-color: $color, $end-color: darken($color, 10%));
// }
//
// // Apply the mixin to the progress bars
// .progress-bar            { @include progress-bar-styles($progress-bar-bg); }
// .progress-bar-success    { @include progress-bar-styles($progress-bar-success-bg); }
// .progress-bar-info       { @include progress-bar-styles($progress-bar-info-bg); }
// .progress-bar-warning    { @include progress-bar-styles($progress-bar-warning-bg); }
// .progress-bar-danger     { @include progress-bar-styles($progress-bar-danger-bg); }
//
// // Reset the striped class because our mixins don't do multiple gradients and
// // the above custom styles override the new `.progress-bar-striped` in v3.2.0.
// .progress-bar-striped {
//   @include gradient-striped;
// }
//
//
// //
// // List groups
// // --------------------------------------------------
//
// .list-group {
//   border-radius: $border-radius-base;
//   @include box-shadow(0 1px 2px rgba(0,0,0,.075));
// }
// .list-group-item.active,
// .list-group-item.active:hover,
// .list-group-item.active:focus {
//   text-shadow: 0 -1px 0 darken($list-group-active-bg, 10%);
//   @include gradient-vertical($start-color: $list-group-active-bg, $end-color: darken($list-group-active-bg, 7.5%));
//   border-color: darken($list-group-active-border, 7.5%);
//
//   .badge {
//     text-shadow: none;
//   }
// }
//
//
// //
// // Panels
// // --------------------------------------------------
//
// // Common styles
// .panel {
//   @include box-shadow(0 1px 2px rgba(0,0,0,.05));
// }
//
// // Mixin for generating new styles
// @mixin panel-heading-styles($color) {
//   @include gradient-vertical($start-color: $color, $end-color: darken($color, 5%));
// }
//
// // Apply the mixin to the panel headings only
// .panel-default > .panel-heading   { @include panel-heading-styles($panel-default-heading-bg); }
// .panel-primary > .panel-heading   { @include panel-heading-styles($panel-primary-heading-bg); }
// .panel-success > .panel-heading   { @include panel-heading-styles($panel-success-heading-bg); }
// .panel-info > .panel-heading      { @include panel-heading-styles($panel-info-heading-bg); }
// .panel-warning > .panel-heading   { @include panel-heading-styles($panel-warning-heading-bg); }
// .panel-danger > .panel-heading    { @include panel-heading-styles($panel-danger-heading-bg); }
//
//
// //
// // Wells
// // --------------------------------------------------
//
// .well {
//   @include gradient-vertical($start-color: darken($well-bg, 5%), $end-color: $well-bg);
//   border-color: darken($well-bg, 10%);
//   $shadow: inset 0 1px 3px rgba(0,0,0,.05), 0 1px 0 rgba(255,255,255,.1);
//   @include box-shadow($shadow);
// }




//
// Carousel
// --------------------------------------------------


// Wrapper for the slide container and indicators
.carousel {
  position: relative;
}

.carousel-inner {
  position: relative;
  overflow: hidden;
  width: 100%;

  > .item {
    display: none;
    position: relative;
    @include transition(.6s ease-in-out left);

    // Account for jankitude on images
    > img,
    > a > img {
      @include img-responsive;
      line-height: 1;
    }

    // Added
    > a {
      display: block;
      //margin-top: 20px;
    }

    // WebKit CSS3 transforms for supported devices
    @media all and (transform-3d), (-webkit-transform-3d) {
      @include transition-transform(0.6s ease-in-out);
      @include backface-visibility(hidden);
      @include perspective(1000px);

      &.next,
      &.active.right {
        @include translate3d(100%, 0, 0);
        left: 0;
      }
      &.prev,
      &.active.left {
        @include translate3d(-100%, 0, 0);
        left: 0;
      }
      &.next.left,
      &.prev.right,
      &.active {
        @include translate3d(0, 0, 0);
        left: 0;
      }
    }
  }

  > .active,
  > .next,
  > .prev {
    display: block;
  }

  > .active {
    left: 0;
  }

  > .next,
  > .prev {
    position: absolute;
    top: 0;
    width: 100%;
  }

  > .next {
    left: 100%;
  }
  > .prev {
    left: -100%;
  }
  > .next.left,
  > .prev.right {
    left: 0;
  }

  > .active.left {
    left: -100%;
  }
  > .active.right {
    left: 100%;
  }

}

// Left/right controls for nav
// ---------------------------

.carousel-control {
  position: absolute;
  top: -30px;
  left: 0;
  bottom: 0;
  width: $carousel-control-width;
  height: $carousel-control-width;
  @include opacity($carousel-control-opacity);
  font-size: $carousel-control-font-size;
  color: $carousel-control-color;
  text-align: center;
  text-shadow: $carousel-text-shadow;
  background-color: #fff; // Fix IE9 click-thru bug
  // We can't have this transition here because WebKit cancels the carousel
  // animation if you trip this while in the middle of another animation.

  // Set gradients for backgrounds
  &.left {
    //@include gradient-horizontal($start-color: rgba(0,0,0,.5), $end-color: rgba(0,0,0,.0001));
    background-image: none;
    background-repeat: no-repeat;

  }
  &.right {
    left: auto;
    right: 0;
    //@include gradient-horizontal($start-color: rgba(0,0,0,.0001), $end-color: rgba(0,0,0,.5));
    background-image: none;
    background-repeat: no-repeat;
  }

  // Hover/focus state
  &:hover,
  &:focus {
    outline: 0;
    color: $carousel-control-color;
    text-decoration: none;
    @include opacity(.9);
  }

  // Toggles
  .icon-prev,
  .icon-next,
  .glyphicon-arrow-left,
  .glyphicon-arrow-right {
    position: absolute;
    top: 35%;
    margin-top: -10px;
    z-index: 5;
    display: inline-block;
  }
  .icon-prev,
  .glyphicon-arrow-left {
    left: 45%;
    margin-left: -10px;
  }
  .icon-next,
  .glyphicon-arrow-right {
    right: 45%;
    margin-right: -10px;
  }
  .icon-prev,
  .icon-next {
    width:  20px;
    height: 20px;
    line-height: 1;
    font-family: serif;
  }


  .icon-prev {
    &:before {
      content: '\2039';// SINGLE LEFT-POINTING ANGLE QUOTATION MARK (U+2039)
    }
  }
  .icon-next {
    &:before {
      content: '\203a';// SINGLE RIGHT-POINTING ANGLE QUOTATION MARK (U+203A)
    }
  }

  // Added
  .glyphicon::before {
    padding-right: 0;
  }
}

// Optional indicator pips
//
// Add an unordered list with the following class and add a list item for each
// slide your carousel holds.

.carousel-indicators {
  position: absolute;
  top: 10px;
  left: 50%;
  z-index: 15;
  width: 60%;
  height: 25px;
  margin-left: -30%;
  padding-left: 0;
  list-style: none;
  text-align: center;

  li {
    display: inline-block;
    width:  10px;
    height: 10px;
    margin: 1px;
    text-indent: -999px;
    border: 1px solid $carousel-indicator-border-color;
    border-radius: 10px;
    cursor: pointer;

    // IE8-9 hack for event handling
    //
    // Internet Explorer 8-9 does not support clicks on elements without a set
    // `background-color`. We cannot use `filter` since that's not viewed as a
    // background color by the browser. Thus, a hack is needed.
    // See https://developer.mozilla.org/en-US/docs/Web/Events/click#Internet_Explorer
    //
    // For IE8, we set solid black as it doesn't support `rgba()`. For IE9, we
    // set alpha transparency for the best results possible.
    background-color: #000 \9; // IE8
    background-color: rgba(0,0,0,0); // IE9
  }
  .active {
    margin: 0;
    width:  12px;
    height: 12px;
    background-color: $carousel-indicator-active-bg;
  }
}

// Optional captions
// -----------------------------
// Hidden by default for smaller viewports
.carousel-caption {
  left: 0;
  right: auto;
  bottom: 0;
  padding: 24px 12px 6px 12px;
  color: $carousel-caption-color;
  background-color: rgba(#fff, 0.8);
  text-align: left;
  text-shadow: $carousel-text-shadow;
}


// Scale up controls for tablets and up
@media screen and (min-width: $screen-sm-min) {

  // Scale up the controls a smidge
  .carousel-control {
    .glyphicon-arrow-left,
    .glyphicon-arrow-right,
    .icon-prev,
    .icon-next {
      width: ($carousel-control-font-size * 1.5);
      height: ($carousel-control-font-size * 1.5);
      margin-top: ($carousel-control-font-size / -2);
      font-size: ($carousel-control-font-size * 1.5);
    }
    .glyphicon-arrow-left,
    .icon-prev {
      margin-left: ($carousel-control-font-size / -2);
    }
    .glyphicon-arrow-right,
    .icon-next {
      margin-right: ($carousel-control-font-size / -2);
    }
  }

  // Show and left align the captions
  .carousel-caption {
    padding: 24px;
  }

  // Move up the indicators
  .carousel-indicators {
    top: 10px;
  }
}
